Index: src/app/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package app;\n\nimport interface_adapter.LoginViewModel;\nimport interface_adapter.ViewManagerModel;\nimport view.LoginView;\nimport view.ViewManager;\n\nimport javax.swing.*;\nimport java.awt.*;\nimport java.io.IOException;\n\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        // We use JFrame ato Build the main program window.\n        // The main panel contains cards and layout.\n\n        // The main application window.\n        JFrame application = new JFrame(\"Login Example\");\n        application.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\n\n        CardLayout cardLayout = new CardLayout();\n\n        // The various View objects. Only one view is visible at a time.\n        JPanel views = new JPanel(cardLayout);\n        application.add(views);\n\n        // This keeps track of and manages which view is currently showing.\n        ViewManagerModel viewManagerModel = new ViewManagerModel();\n        new ViewManager(views, cardLayout, viewManagerModel);\n\n        // The data for the views, such as username and password, are in the ViewModels.\n        // This information will be changed by a presenter object that is reporting the\n        // results from the use case. The ViewModels are observable, and will\n        // be observed by the Views.\n        LoginViewModel loginViewModel = new LoginViewModel();\n\n        LoginView loginView = new LoginView(loginViewModel);\n        views.add(loginView, loginView.viewName);\n\n        viewManagerModel.setActiveView(loginView.viewName);\n        viewManagerModel.firePropertyChanged();\n\n        application.pack();\n        application.setVisible(true);\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/Main.java b/src/app/Main.java
--- a/src/app/Main.java	(revision 20e3e46669ff945a7afedc2e282633afd29a9587)
+++ b/src/app/Main.java	(date 1699837441601)
@@ -16,7 +16,7 @@
         // The main panel contains cards and layout.
 
         // The main application window.
-        JFrame application = new JFrame("Login Example");
+        JFrame application = new JFrame("Human Resources Manager");
         application.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
 
         CardLayout cardLayout = new CardLayout();
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	(revision 20e3e46669ff945a7afedc2e282633afd29a9587)
+++ /dev/null	(revision 20e3e46669ff945a7afedc2e282633afd29a9587)
@@ -1,8 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
-# Editor-based HTTP Client requests
-/httpRequests/
-# Datasource local storage ignored files
-/dataSources/
-/dataSources.local.xml
Index: .idea/uiDesigner.xml
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
deleted file mode 100644
--- a/.idea/uiDesigner.xml	(revision 20e3e46669ff945a7afedc2e282633afd29a9587)
+++ /dev/null	(revision 20e3e46669ff945a7afedc2e282633afd29a9587)
@@ -1,124 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="Palette2">
-    <group name="Swing">
-      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
-      </item>
-      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
-      </item>
-      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.svg" removable="false" auto-create-binding="false" can-attach-label="true">
-        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
-        <initial-values>
-          <property name="text" value="Button" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="RadioButton" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="CheckBox" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="Label" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
-          <preferred-size width="200" height="200" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
-          <preferred-size width="200" height="200" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
-      </item>
-      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
-          <preferred-size width="-1" height="20" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
-      </item>
-      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
-      </item>
-    </group>
-  </component>
-</project>
\ No newline at end of file
Index: src/view/LoginView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package view;\n\nimport interface_adapter.LoginState;\nimport interface_adapter.LoginViewModel;\n\nimport javax.swing.*;\nimport java.awt.*;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.awt.event.KeyEvent;\nimport java.awt.event.KeyListener;\nimport java.beans.PropertyChangeEvent;\nimport java.beans.PropertyChangeListener;\n\npublic class LoginView extends JPanel implements ActionListener, PropertyChangeListener {\n\n    public final String viewName = \"log in\";\n    private final LoginViewModel loginViewModel;\n\n    /**\n     * The username chosen by the user\n     */\n    final JTextField usernameInputField = new JTextField(15);\n    private final JLabel usernameErrorField = new JLabel();\n    /**\n     * The password\n     */\n    final JPasswordField passwordInputField = new JPasswordField(15);\n    private final JLabel passwordErrorField = new JLabel();\n\n    final JButton logIn;\n    final JButton cancel;\n\n    /**\n     * A window with a title and a JButton.\n     */\n    public LoginView(LoginViewModel loginViewModel) {\n        this.loginViewModel = loginViewModel;\n        this.loginViewModel.addPropertyChangeListener(this);\n\n        JLabel title = new JLabel(\"Login Screen\");\n        title.setAlignmentX(Component.CENTER_ALIGNMENT);\n\n        LabelTextPanel usernameInfo = new LabelTextPanel(\n                new JLabel(\"Username\"), usernameInputField);\n        LabelTextPanel passwordInfo = new LabelTextPanel(\n                new JLabel(\"Password\"), passwordInputField);\n\n        JPanel buttons = new JPanel();\n        logIn = new JButton(loginViewModel.LOGIN_BUTTON_LABEL);\n        buttons.add(logIn);\n        cancel = new JButton(loginViewModel.CANCEL_BUTTON_LABEL);\n        buttons.add(cancel);\n\n        logIn.addActionListener(this);\n        cancel.addActionListener(this);\n\n        usernameInputField.addKeyListener(new KeyListener() {\n            @Override\n            public void keyTyped(KeyEvent e) {\n                LoginState currentState = loginViewModel.getState();\n                currentState.setUsername(usernameInputField.getText());\n                loginViewModel.setState(currentState);\n            }\n\n            @Override\n            public void keyPressed(KeyEvent e) {}\n\n            @Override\n            public void keyReleased(KeyEvent e) {}\n        });\n        this.setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));\n\n        this.add(title);\n        this.add(usernameInfo);\n        this.add(usernameErrorField);\n        this.add(passwordInfo);\n        this.add(passwordErrorField);\n        this.add(buttons);\n    }\n\n    /**\n     * React to a button click that results in evt.\n     */\n    public void actionPerformed(ActionEvent evt) {\n        System.out.println(\"Click \" + evt.getActionCommand());\n    }\n\n    @Override\n    public void propertyChange(PropertyChangeEvent evt) {\n        LoginState state = (LoginState) evt.getNewValue();\n        setFields(state);\n    }\n\n    private void setFields(LoginState state) {\n        usernameInputField.setText(state.getUsername());\n        passwordInputField.setText(state.getPassword());\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/view/LoginView.java b/src/view/LoginView.java
--- a/src/view/LoginView.java	(revision 20e3e46669ff945a7afedc2e282633afd29a9587)
+++ b/src/view/LoginView.java	(date 1699837441612)
@@ -3,15 +3,23 @@
 import interface_adapter.LoginState;
 import interface_adapter.LoginViewModel;
 
-import javax.swing.*;
 import java.awt.*;
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
 import java.awt.event.KeyEvent;
 import java.awt.event.KeyListener;
+import java.awt.image.*;
+
 import java.beans.PropertyChangeEvent;
 import java.beans.PropertyChangeListener;
 
+import java.io.*;
+import javax.imageio.ImageIO;
+
+import javax.swing.*;
+import javax.swing.border.Border;
+
+
 public class LoginView extends JPanel implements ActionListener, PropertyChangeListener {
 
     public final String viewName = "log in";
@@ -29,18 +37,30 @@
     private final JLabel passwordErrorField = new JLabel();
 
     final JButton logIn;
+    final JButton signUp;
     final JButton cancel;
 
     /**
      * A window with a title and a JButton.
      */
-    public LoginView(LoginViewModel loginViewModel) {
+    public LoginView(LoginViewModel loginViewModel) throws IOException {
         this.loginViewModel = loginViewModel;
         this.loginViewModel.addPropertyChangeListener(this);
 
-        JLabel title = new JLabel("Login Screen");
+        JLabel title = new JLabel("University of Toronto HR System");
         title.setAlignmentX(Component.CENTER_ALIGNMENT);
 
+        BufferedImage image = ImageIO.read(new File("./src/images/logo.jpeg"));
+        JLabel logo = new JLabel(new ImageIcon(image));
+        logo.setAlignmentX(Component.CENTER_ALIGNMENT);
+
+        // From here the elements of the right column
+
+        // Create welcome message
+        JLabel welcomeMessage = new JLabel("<html><center>Welcome to the <b>University of Toronto</b> Human Resources Manager<br>Connecting Staff, Faculty, and Students</center></html>", JLabel.CENTER);
+        welcomeMessage.setAlignmentX(Component.CENTER_ALIGNMENT);
+
+
         LabelTextPanel usernameInfo = new LabelTextPanel(
                 new JLabel("Username"), usernameInputField);
         LabelTextPanel passwordInfo = new LabelTextPanel(
@@ -49,10 +69,13 @@
         JPanel buttons = new JPanel();
         logIn = new JButton(loginViewModel.LOGIN_BUTTON_LABEL);
         buttons.add(logIn);
+        signUp = new JButton(loginViewModel.SIGNUP_BUTTON_LABEL);
+        buttons.add(signUp);
         cancel = new JButton(loginViewModel.CANCEL_BUTTON_LABEL);
         buttons.add(cancel);
 
         logIn.addActionListener(this);
+        signUp.addActionListener(this);
         cancel.addActionListener(this);
 
         usernameInputField.addKeyListener(new KeyListener() {
@@ -69,14 +92,49 @@
             @Override
             public void keyReleased(KeyEvent e) {}
         });
-        this.setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));
+        this.setLayout(new GridBagLayout());
+        GridBagConstraints gbc = new GridBagConstraints();
+
+        // Adding the title
+        gbc.gridx = 0;
+        gbc.gridy = 0;
+        gbc.gridwidth = 1;
+        gbc.anchor = GridBagConstraints.WEST;
+
+        // Adding the logo
+        gbc.gridy = 1;
+        this.add(logo, gbc);
+
+        // Setting up the right column for inputs and buttons
+        gbc.gridx = 1;
+        gbc.gridy = 0;
+        gbc.gridheight = 2;
+        gbc.anchor = GridBagConstraints.CENTER;
+        gbc.fill = GridBagConstraints.BOTH;
+        gbc.insets = new Insets(10, 10, 10, 10); // Top, left, bottom, right padding
 
-        this.add(title);
-        this.add(usernameInfo);
-        this.add(usernameErrorField);
-        this.add(passwordInfo);
-        this.add(passwordErrorField);
-        this.add(buttons);
+        Border paddingBorder = BorderFactory.createEmptyBorder(5, 5, 5, 5);
+
+        // Apply the border to the text fields
+        usernameInputField.setBorder(BorderFactory.createCompoundBorder(
+                usernameInputField.getBorder(), paddingBorder));
+        passwordInputField.setBorder(BorderFactory.createCompoundBorder(
+                passwordInputField.getBorder(), paddingBorder));
+
+        JPanel rightPanel = new JPanel();
+        rightPanel.setLayout(new BoxLayout(rightPanel, BoxLayout.Y_AXIS));
+        rightPanel.add(welcomeMessage); // Add the welcome message here
+        // Add a vertical strut for spacing after the welcome message
+        rightPanel.add(Box.createVerticalStrut(20)); // Adjust the height (20) as needed
+
+        rightPanel.add(usernameInfo);
+        rightPanel.add(usernameErrorField);
+        rightPanel.add(Box.createVerticalStrut(2)); // Smaller strut for closer fields
+        rightPanel.add(passwordInfo);
+        rightPanel.add(passwordErrorField);
+        rightPanel.add(buttons);
+
+        this.add(rightPanel, gbc);
     }
 
     /**
Index: CSC207-Project-Group-262.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n    <exclude-output />\n    <content url=\"file://$MODULE_DIR$\">\n      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\n    </content>\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CSC207-Project-Group-262.iml b/CSC207-Project-Group-262.iml
--- a/CSC207-Project-Group-262.iml	(revision 20e3e46669ff945a7afedc2e282633afd29a9587)
+++ b/CSC207-Project-Group-262.iml	(date 1699837441616)
@@ -4,6 +4,7 @@
     <exclude-output />
     <content url="file://$MODULE_DIR$">
       <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/tests" isTestSource="true" />
     </content>
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
